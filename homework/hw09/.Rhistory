knitr::opts_chunk$set(echo = TRUE, message = FALSE,
warning = FALSE, error = TRUE, fig.height = 3)
library(tidyverse)
library(kableExtra)
library(broman)
source("../../scripts/viridis.R")
source("../../scripts/ggprob.R")
theme_set(theme_minimal())
data = read_csv("../../data/chimpanzee.csv")
data
qnorm(0, 0.72)
qnorm(0.72)
z = qnorm(0.72)
z
x = 39.37*2
z = ((x-69.7)/3.1)
proportion = 1 - pnorm(z)
proportion
qnorm(0.95, proportion)
qnorm(0.95, proportion, 3.1)
mean1 = 69.7
sd1 = 3.1
x = 39.37*2
z = ((x-mean1)/sd1)
proportion = 1 - pnorm(z)
proportion
qnorm(0.95, mean1, sd1)
??pnorm
sd2 = 3.1/sqrt(250)
p1 = pnorm(69.5, mean1, sd2)
p2 = pnorm(70.5, mean1, sd2)
sample_mean = p2-p1
sample_mean
qbinom(0.35, 100, 0.5)
qbinom(35, 100, 0.5)
pbinom(35, 100, 0.5)
mu = 100*0.35
sigma = sqrt(mu*(1-0.35))
sigma
mu = 100*0.35
sigma = sqrt(mu*(1-0.35))
pnorm(0.001758821, my, sigma)
mu = 100*0.35
sigma = sqrt(mu*(1-0.35))
pnorm(0.001, my, sigma)
mu = 100*0.35
sigma = sqrt(mu*(1-0.35))
pnorm(35, my, sigma)
mu = 100*0.35
sigma = sqrt(mu*(1-0.35))
pnorm(35, mu, sigma)
mu = 100*0.5
sigma = sqrt(mu*(1-0.5))
pnorm(35, mu, sigma)
temp1 = pbinom(35, 100, 0.5)
temp1 = pbinom(35, 100, 0.5)
temp1
mu = 100*0.5
sigma = sqrt(mu*(1-0.5))
temp2 = pnorm(35, mu, sigma)
temp2
abs(temp1 - temp2)
mu = 100*0.5
sigma = sqrt(mu*(1-0.5))
temp2 = pnorm(35, mu, sigma)
temp2
abs(temp1 - temp2)/temp1*100
qnorm(0.05, 100, 35)
vector = c(0:1, 0.01)
pbinom(35, 100, 0.5)
tibble()
qnorm(0.05, 100, 35)
vector = c(0:1, 0.01)
vector
pbinom(35, 100, 0.5)
tibble()
qnorm(0.05, 100, 35)
table1 = tibble(p=seq(0,1,0.01), prob = pbinom(35, 100, p))
table1 = tibble(p=seq(0,1,0.01), prob = pbinom(35, 100, p))
teble1
table1 = tibble(p=seq(0,1,0.01), prob = pbinom(35, 100, p))
table1
table1 = tibble(p=seq(0,1,0.01), prob = pbinom(35, 100, p))
table1 = table1 %>%
filter(prob > 0.05)
table1 = tibble(p=seq(0,1,0.01), prob = pbinom(35, 100, p))
table1 = table1 %>%
filter(prob > 0.05)
table1
table1 = tibble(p=seq(0,1,0.01), prob = pbinom(35, 100, p))
table1 = table1 %>%
filter(prob > 0.05) %>%
arrange(desc)
table1 = tibble(p=seq(0,1,0.01), prob = pbinom(35, 100, p))
table1 = table1 %>%
filter(prob > 0.05) %>%
arrange(prob, desc)
table1 = tibble(p=seq(0,1,0.01), prob = pbinom(35, 100, p))
table1 = table1 %>%
filter(prob > 0.05) %>%
arrange(asc(prob))
table1 = tibble(p=seq(0,1,0.01), prob = pbinom(35, 100, p))
table1 = table1 %>%
filter(prob > 0.05) %>%
arrange(prob)
table1
table1 = tibble(p=seq(0,1,0.01), prob = pbinom(35, 100, p))
table1 = table1 %>%
filter(prob > 0.05) %>%
arrange(prob)
head(table1, 1)
table1 = tibble(p=seq(0,1,0.01), prob = pbinom(35, 100, p))
table1 = table1 %>%
filter(prob > 0.05) %>%
arrange(prob)
head(table1, 1)
data = read_csv("../../data/chimpanzee.csv")
data
table1 = tibble(p=seq(0,1,0.01), prob = pbinom(35, 100, p))
table1 = table1 %>%
filter(prob > 0.05) %>%
arrange(prob)
head(table1, 6)
table1 = tibble(p=seq(0,1,0.01), prob = pbinom(35, 100, p))
table1 = table1 %>%
filter(prob > 0.05) %>%
arrange(prob)
head(table1, 10)
table1 = tibble(p=seq(0,1,0.01), prob = pbinom(35, 100, p))
table1 = table1 %>%
filter(prob > 0.05) %>%
arrange(prob)
head(table1, 1)
data = read_csv("../../data/chimpanzee.csv")
data %>%
mutate(session_type = case_when(
partner == "none" ~ "no partner",
TRUE ~ "partner"
)) %>%
group_by(session_type) %>%
summarise(prosocial = sum(prosocial), selfish = sum(selfish), n = prosocial+selfish, p_prosocial = prosocial/(n))
success = 359
sampleSize = 610
condifence = 0.95
success_adjusted = success+2 # Added two successes
sampleSize_adjusted = sampleSize+4 # Added four data points total
phat = success_adjusted/sampleSize_adjusted
se = sqrt(phat * (1 - phat)/sampleSize_adjusted)  # Changes carry through to p_hat and n_adjusted
moe = qnorm(condifence + (1 - condifence)/2) * se
left = phat - moe
right = phat + moe
c(left, right)
x1 = 83
n1 = 180
x2 = 359
n2 = 610
# Confidence level
alpha = 0.95
# We will use "tilde" to refer to the AC-adjusted statistics
# This code computes the AC Confidence Interval for the true difference in two proportions
ntilde1 = n1 + 2
ntilde2 = n2 + 2
ptilde1 = (x1+1)/ntilde1
ptilde2 = (x2+1)/ntilde2
pe = ptilde1 - ptilde2
se1 = sqrt( ptilde1*(1-ptilde1)/ntilde1 )
se2 = sqrt( ptilde2*(1-ptilde2)/ntilde2 )
se = sqrt(se1^2 + se2^2 )
moe = qnorm(alpha + (1 - alpha)/2) * se
left = pe - moe
right = pe + moe
c(left, right)
x1 = 83
n1 = 180
x2 = 359
n2 = 610
# Confidence level
alpha = 0.95
# We will use "tilde" to refer to the AC-adjusted statistics
# This code computes the AC Confidence Interval for the true difference in two proportions
ntilde1 = n1 + 2
ntilde2 = n2 + 2
ptilde1 = (x1+1)/ntilde1
ptilde2 = (x2+1)/ntilde2
pe = ptilde2 - ptilde1
se1 = sqrt( ptilde1*(1-ptilde1)/ntilde1 )
se2 = sqrt( ptilde2*(1-ptilde2)/ntilde2 )
se = sqrt(se1^2 + se2^2 )
moe = qnorm(alpha + (1 - alpha)/2) * se
left = pe - moe
right = pe + moe
c(left, right)
null_p = 0.5
gbinom(610, null_p, scale = TRUE) +
geom_vline(xintercept = 359, color = "red")
1 - pbinom(358, 610, 0.5)
359-305
null_p = 0.5
gbinom(610, null_p, scale = TRUE) +
geom_vline(xintercept = 359, color = "red") +
geom_vline(xintercept = 54, color = "red")
null_p = 0.5
gbinom(610, null_p, scale = TRUE) +
geom_vline(xintercept = 359, color = "red") +
geom_vline(xintercept = 251, color = "red")
(1 - pbinom(358, 610, 0.5))*2
(1 - pbinom(358, 610, 0.5))*2
data = read_csv("../../data/chimpanzee.csv")
data %>%
mutate(session_type = case_when(
partner == "none" ~ "no partner",
TRUE ~ "partner"
)) %>%
group_by(session_type) %>%
summarise(prosocial = sum(prosocial), selfish = sum(selfish), n = prosocial+selfish, p_prosocial = prosocial/(n)*100)
knitr::opts_chunk$set(echo = TRUE, message = FALSE,
warning = FALSE, error = TRUE, fig.height = 3)
library(tidyverse)
library(kableExtra)
library(broman)
source("../../scripts/viridis.R")
source("../../scripts/ggprob.R")
theme_set(theme_minimal())
z = qnorm(0.72)
z
mean1 = 69.7
sd1 = 3.1
x = 39.37*2
z = ((x-mean1)/sd1)
proportion = 1 - pnorm(z)
proportion
qnorm(0.95, mean1, sd1)
sd2 = 3.1/sqrt(250)
p1 = pnorm(69.5, mean1, sd2)
p2 = pnorm(70.5, mean1, sd2)
sample_mean = p2-p1
sample_mean
temp1 = pbinom(35, 100, 0.5)
temp1
mu = 100*0.5
sigma = sqrt(mu*(1-0.5))
temp2 = pnorm(35, mu, sigma)
temp2
abs(temp1 - temp2)/temp1*100
table1 = tibble(p=seq(0,1,0.01), prob = pbinom(35, 100, p))
table1 = table1 %>%
filter(prob > 0.05) %>%
arrange(prob)
head(table1, 1)
data = read_csv("../../data/chimpanzee.csv")
data %>%
mutate(session_type = case_when(
partner == "none" ~ "no partner",
TRUE ~ "partner"
)) %>%
group_by(session_type) %>%
summarise(prosocial = sum(prosocial), selfish = sum(selfish), n = prosocial+selfish, p_prosocial = prosocial/(n)*100)
success = 359
sampleSize = 610
condifence = 0.95
success_adjusted = success+2 # Added two successes
sampleSize_adjusted = sampleSize+4 # Added four data points total
phat = success_adjusted/sampleSize_adjusted
se = sqrt(phat * (1 - phat)/sampleSize_adjusted)  # Changes carry through to p_hat and n_adjusted
moe = qnorm(condifence + (1 - condifence)/2) * se
left = phat - moe
right = phat + moe
c(left, right)
x1 = 83
n1 = 180
x2 = 359
n2 = 610
# Confidence level
alpha = 0.95
# We will use "tilde" to refer to the AC-adjusted statistics
# This code computes the AC Confidence Interval for the true difference in two proportions
ntilde1 = n1 + 2
ntilde2 = n2 + 2
ptilde1 = (x1+1)/ntilde1
ptilde2 = (x2+1)/ntilde2
pe = ptilde2 - ptilde1
se1 = sqrt( ptilde1*(1-ptilde1)/ntilde1 )
se2 = sqrt( ptilde2*(1-ptilde2)/ntilde2 )
se = sqrt(se1^2 + se2^2 )
moe = qnorm(alpha + (1 - alpha)/2) * se
left = pe - moe
right = pe + moe
c(left, right)
null_p = 0.5
gbinom(610, null_p, scale = TRUE) +
geom_vline(xintercept = 359, color = "red") +
geom_vline(xintercept = 251, color = "red")
