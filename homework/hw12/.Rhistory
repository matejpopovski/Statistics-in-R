)
View(conf_int2)
View(model_object)
lengths <- seq(min(data$Length), max(data$Length), length.out = 100)
new_data <- data.frame(Length = lengths)
conf_int2 = predict(model_object, newdata = new_data, interval = "confidence")
pred_int2 = predict(model_object, newdata = new_data, interval = "prediction")
# ggplot(data, aes(Length, Age)) +
#   geom_point(data = data, aes(x = Length, y = Age)) +
#   geom_line(data = as_tibble(pred_int2), mapping = aes(y = lwr)) +
#   geom_line(data = as_tibble(pred_int2), mapping = aes(y = upr)) +
#   geom_line(data = as_tibble(conf_int2), mapping = aes(y = lwr), color = "darkgreen") +
#   geom_line(data = as_tibble(conf_int2), mapping = aes(y = upr), color = "darkgreen") +
#   geom_smooth(method = "lm") +
#   labs(
#     title = "Lion Ages vs. % nose black",
#     subtitle = "With Prediction Intervals in Black, Confidence Regression Interval in Green"
#   )  +
#   theme(plot.title = element_text(size = 20),
#         plot.subtitle = element_text(size = 15))
# Create a sequence of lengths for prediction
length_seq <- seq(min(data$Length), max(data$Length), length.out = 100)
# Predict mean ages and individual ages
mean_age <- predict(model_object, newdata = tibble(Length = length_seq), interval = "confidence")
indiv_age <- predict(model_object, newdata = tibble(Length = length_seq), interval = "prediction")
# Create a data frame for ribbons
ribbons_data <- tibble(
Length = length_seq,
Mean_Lower = mean_age[, "lwr"],
Mean_Upper = mean_age[, "upr"],
Indiv_Lower = indiv_age[, "lwr"],
Indiv_Upper = indiv_age[, "upr"]
)
# Plot the data with ribbons
ggplot(data, aes(x = Length, y = Age)) +
geom_point() +  # Add points
geom_ribbon(data = ribbons_data, aes(x = Length, ymin = Indiv_Lower, ymax = Indiv_Upper), fill = "blue", alpha = 0.3) +  # Add blue ribbon for individual ages
geom_ribbon(data = ribbons_data, aes(x = Length, ymin = Mean_Lower, ymax = Mean_Upper), fill = "red", alpha = 0.3) +  # Add red ribbon for mean ages
geom_smooth(method = "lm", se = FALSE) +  # Add regression line
labs(x = "Length", y = "Age") +  # Label axes
theme_minimal()  # Apply minimal theme
lengths <- seq(min(dugong$Length), max(dugong$Length), length.out = 100)
lengths = seq(min(data$Length), max(data$Length), length.out = 100)
new_data = data.frame(Length = lengths)
intervals <- predict(model_object, newdata = new_data, interval = "prediction", level = 0.95)
conf_intervals <- predict(model_object, newdata = new_data, interval = "confidence", level = 0.95)
interval_data <- data.frame(
Length = lengths,
Mean_Age = (conf_intervals[, "lwr"] + conf_intervals[, "upr"]) / 2,
SD_Age = (conf_intervals[, "upr"] - conf_intervals[, "lwr"]) / 2
)
ggplot(interval_data, aes(x = Length, y = Mean_Age)) +
geom_point(data = dugong, aes(x = Length, y = Age)) + # Original data points
geom_line(size = 1.5, color = "blue") + # Mean regression line
geom_line(aes(y = Mean_Age + SD_Age), linetype = "dashed", color = "red") +
geom_line(aes(y = Mean_Age - SD_Age), linetype = "dashed", color = "red") +
geom_ribbon(aes(ymin = Mean_Age - SD_Age,
ymax = Mean_Age + SD_Age),
alpha = 0.2) +
labs(title = "Dugong Length vs. Age",
x = "Length (meters)",
y = "Age (years)",
color = "Parameter") +
theme_bw()
lengths = seq(min(data$Length), max(data$Length), length.out = 100)
new_data = data.frame(Length = lengths)
intervals <- predict(model_object, newdata = new_data, interval = "prediction", level = 0.95)
conf_intervals <- predict(model_object, newdata = new_data, interval = "confidence", level = 0.95)
interval_data <- data.frame(
Length = lengths,
Mean_Age = (conf_intervals[, "lwr"] + conf_intervals[, "upr"]) / 2,
SD_Age = (conf_intervals[, "upr"] - conf_intervals[, "lwr"]) / 2
)
ggplot(interval_data, aes(x = Length, y = Mean_Age)) +
geom_point(data = data, aes(x = Length, y = Age)) + # Original data points
geom_line(size = 1.5, color = "blue") + # Mean regression line
geom_line(aes(y = Mean_Age + SD_Age), linetype = "dashed", color = "red") +
geom_line(aes(y = Mean_Age - SD_Age), linetype = "dashed", color = "red") +
geom_ribbon(aes(ymin = Mean_Age - SD_Age,
ymax = Mean_Age + SD_Age),
alpha = 0.2) +
labs(title = "Dugong Length vs. Age",
x = "Length (meters)",
y = "Age (years)",
color = "Parameter") +
theme_bw()
lengths = seq(min(data$Length), max(data$Length), length.out = 100)
new_data = data.frame(Length = lengths)
intervals = predict(model_object, newdata = new_data, interval = "prediction", level = 0.95)
conf_intervals = predict(model_object, newdata = new_data, interval = "confidence", level = 0.95)
interval_data = data.frame(
Length = lengths,
Mean_Age = (conf_intervals[, "lwr"] + conf_intervals[, "upr"]) / 2,
SD_Age = (conf_intervals[, "upr"] - conf_intervals[, "lwr"]) / 2
)
ggplot(interval_data, aes(x = Length, y = Mean_Age)) +
geom_point(data = data, aes(x = Length, y = Age)) + # Original data points
geom_line(size = 1.5, color = "blue") + # Mean regression line
geom_line(aes(y = Mean_Age + SD_Age), linetype = "dashed", color = "red") +
geom_line(aes(y = Mean_Age - SD_Age), linetype = "dashed", color = "red") +
geom_ribbon(aes(ymin = Mean_Age - SD_Age,
ymax = Mean_Age + SD_Age),
alpha = 0.2) +
labs(title = "Dugong Length vs. Age",
x = "Length (meters)",
y = "Age (years)",
color = "Parameter") +
theme_bw()
ggplot(monona, aes(x = year1, y = duration)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "Duration of Ice Cover on Lake Monona by Year",
x = "Year",
y = "Duration of Ice Cover (days)")
model = lm(duration ~ year1, data = monona)
# Create a dataframe of residuals
residuals_df <- data.frame(year1 = monona$year1, residuals = resid(model))
# Plot the residuals
ggplot(residuals_df, aes(x = year1, y = residuals)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
labs(title = "Residual Plot for Duration of Ice Cover",
x = "Year",
y = "Residuals")
model
summary(model)
x = monona$year1
y = monona$duration
C = 0.95
n = nrow(monona)
r = cor(x, y)
beta_hat_1 = r * sd(y) / sd(x)
se = 0.02652 # copied from lm() output above; don't worry about calculating by hand, just use lm()
moe = qt(C + (1-C)/2, df = n - 2)*se
left = beta_hat_1 - moe
right = beta_hat_1 + moe
c(left, right)
future_years = data.frame(year1 = seq(2030, 2100, by = 10))
prediction_intervals = predict(model, newdata = future_years, interval = "prediction")
predicted_data = cbind(future_years, prediction_intervals)
predicted_data
boston = read_csv("../../data/boston-marathon-data.csv")
boston_2010_males = boston %>%
filter(Year == 2010, Sex == "male")
model = lm(Time ~ Age, data = boston_2010_males)
new_data = data.frame(Age = 40)
prediction_interval_40 = predict(model, newdata = new_data, interval = "prediction")
prediction_interval_40
boston_2011_40yr_males = boston %>%
filter(Year == 2011, Sex == "male", Age == 40)
within_interval = boston_2011_40yr_males %>%
summarize(Count = sum(Time >= prediction_interval_40[1] & Time <= prediction_interval_40[3]))
total_40yr_males_2011 = nrow(boston_2011_40yr_males)
proportion_within_interval = within_interval$Count / total_40yr_males_2011
proportion_within_interval
boston_2011_40yr_males
ggplot(boston_2011_40yr_males, aes(x = Time)) +
geom_histogram(bins = 10,
fill = "red",
color = "navy")
lengths = seq(min(data$Length), max(data$Length), length.out = 100)
new_data = data.frame(Length = lengths)
intervals = predict(model_object, newdata = new_data, interval = "prediction", level = 0.95)
conf_intervals = predict(model_object, newdata = new_data, interval = "confidence", level = 0.95)
interval_data = data.frame(
Length = lengths,
Mean_Age = (conf_intervals[, "lwr"] + conf_intervals[, "upr"]) / 2,
SD_Age = (conf_intervals[, "upr"] - conf_intervals[, "lwr"]) / 2
)
ggplot(interval_data, aes(x = Length, y = Mean_Age)) +
geom_point(data = data, aes(x = Length, y = Age)) + # Original data points
geom_line(size = 1.5, color = "navy") + # Mean regression line
geom_line(aes(y = Mean_Age + SD_Age), linetype = "dashed", color = "pink") +
geom_line(aes(y = Mean_Age - SD_Age), linetype = "dashed", color = "pink") +
geom_ribbon(aes(ymin = Mean_Age - SD_Age,
ymax = Mean_Age + SD_Age),
alpha = 0.2) +
labs(title = "Dugong Length vs. Age",
x = "Length (meters)",
y = "Age (years)",
color = "Parameter") +
theme_bw()
lengths = seq(min(data$Length), max(data$Length), length.out = 100)
new_data = data.frame(Length = lengths)
intervals = predict(model_object, newdata = new_data, interval = "prediction")
conf_intervals = predict(model_object, newdata = new_data, interval = "confidence")
interval_data = data.frame(
Length = lengths,
Mean_Age = (conf_intervals[, "lwr"] + conf_intervals[, "upr"]) / 2,
SD_Age = (conf_intervals[, "upr"] - conf_intervals[, "lwr"]) / 2
)
ggplot(interval_data, aes(x = Length, y = Mean_Age)) +
geom_point(data = data, aes(x = Length, y = Age)) + # Original data points
geom_line(size = 1.5, color = "navy") + # Mean regression line
geom_line(aes(y = Mean_Age + SD_Age), linetype = "dashed", color = "pink") +
geom_line(aes(y = Mean_Age - SD_Age), linetype = "dashed", color = "pink") +
geom_ribbon(aes(ymin = Mean_Age - SD_Age,
ymax = Mean_Age + SD_Age),
alpha = 0.2) +
labs(title = "Dugong Length vs. Age",
x = "Length (meters)",
y = "Age (years)",
color = "Parameter") +
theme_bw()
lengths = seq(min(data$Length), max(data$Length), length.out = 100)
new_data = data.frame(Length = lengths)
intervals = predict(model_object3, newdata = new_data, interval = "prediction")
data = read_csv("../../data/dugong.csv")
model_object3 = lm(Age ~ Length, data = data)
conf_int = predict(model_object3, newdata = tibble(Length = 2.5), interval = "confidence") #by default function takes 95%
conf_int
pred_int = predict(model_object3, newdata = tibble(Length = 2.5), interval = "prediction")
pred_int
lengths = seq(min(data$Length), max(data$Length), length.out = 100)
new_data = data.frame(Length = lengths)
intervals = predict(model_object3, newdata = new_data, interval = "prediction")
conf_intervals = predict(model_object3, newdata = new_data, interval = "confidence")
interval_data = data.frame(
Length = lengths,
Mean_Age = (conf_intervals[, "lwr"] + conf_intervals[, "upr"]) / 2,
SD_Age = (conf_intervals[, "upr"] - conf_intervals[, "lwr"]) / 2
)
ggplot(interval_data, aes(x = Length, y = Mean_Age)) +
geom_point(data = data, aes(x = Length, y = Age)) + # Original data points
geom_line(size = 1.5, color = "navy") + # Mean regression line
geom_line(aes(y = Mean_Age + SD_Age), linetype = "dashed", color = "pink") +
geom_line(aes(y = Mean_Age - SD_Age), linetype = "dashed", color = "pink") +
geom_ribbon(aes(ymin = Mean_Age - SD_Age,
ymax = Mean_Age + SD_Age),
alpha = 0.2) +
labs(title = "Dugong Length vs. Age",
x = "Length (meters)",
y = "Age (years)",
color = "Parameter") +
theme_bw()
model
summary(model)
x = monona$year1
y = monona$duration
C = 0.95
n = nrow(monona)
r = cor(x, y)
beta_hat_1 = r * sd(y) / sd(x)
se = 0.02652 # copied from lm() output above; don't worry about calculating by hand, just use lm()
moe = qt(C + (1-C)/2, df = n - 2)*se
left = beta_hat_1 - moe
right = beta_hat_1 + moe
c(left, right)
model
summary(model)
x = monona$year1
y = monona$duration
C = 0.95
n = nrow(monona)
r = cor(x, y)
beta_hat_1 = r * sd(y) / sd(x)
se = 0.02652 # copied from lm() output above; don't worry about calculating by hand, just use lm()
moe = qt(C + (1-C)/2, df = n - 2)*se
left = beta_hat_1 - moe
right = beta_hat_1 + moe
c(left, right)
model
summary(model)
x = monona$year1
y = monona$duration
C = 0.95
n = nrow(monona)
r = cor(x, y)
beta_hat_1 = r * sd(y) / sd(x)
se = 0.02652 # copied from lm() output above; don't worry about calculating by hand, just use lm()
moe = qt(C + (1-C)/2, df = n - 2)*se
left = beta_hat_1 - moe
right = beta_hat_1 + moe
c(left, right)
model
summary(model)
x = monona$year1
y = monona$duration
C = 0.95
n = nrow(monona)
r = cor(x, y)
beta_hat_1 = r * sd(y) / sd(x)
se = 0.02652 # copied from lm() output above; don't worry about calculating by hand, just use lm()
moe = qt(C + (1-C)/2, df = n - 2)*se
left = beta_hat_1 - moe
right = beta_hat_1 + moe
c(left, right)
monona = read_csv("../../data/lake-monona-winters-2023.csv")
monona
ggplot(monona, aes(x = year1, y = duration)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "Duration of Ice Cover on Lake Monona by Year",
x = "Year",
y = "Duration of Ice Cover (days)")
model = lm(duration ~ year1, data = monona)
# Create a dataframe of residuals
residuals_df <- data.frame(year1 = monona$year1, residuals = resid(model))
# Plot the residuals
ggplot(residuals_df, aes(x = year1, y = residuals)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
labs(title = "Residual Plot for Duration of Ice Cover",
x = "Year",
y = "Residuals")
model
summary(model)
x = monona$year1
y = monona$duration
C = 0.95
n = nrow(monona)
r = cor(x, y)
beta_hat_1 = r * sd(y) / sd(x)
se = 0.02652 # copied from lm() output above; don't worry about calculating by hand, just use lm()
moe = qt(C + (1-C)/2, df = n - 2)*se
left = beta_hat_1 - moe
right = beta_hat_1 + moe
c(left, right)
model
summary(model)
x = monona$year1
y = monona$duration
C = 0.95
n = nrow(monona)
r = cor(x, y)
beta_hat_1 = r * sd(y) / sd(x)
se = 0.02652 # copied from lm() output above; don't worry about calculating by hand, just use lm()
moe = qt(C + (1-C)/2, df = n - 2)*se
left = beta_hat_1 - moe
right = beta_hat_1 + moe
c(left, right)
future_years = data.frame(year1 = seq(2030, 2100, by = 10))
prediction_intervals = predict(model, newdata = future_years, interval = "prediction")
predicted_data = cbind(future_years, prediction_intervals)
predicted_data
boston = read_csv("../../data/boston-marathon-data.csv")
boston_2010_males = boston %>%
filter(Year == 2010, Sex == "male")
model = lm(Time ~ Age, data = boston_2010_males)
new_data = data.frame(Age = 40)
prediction_interval_40 = predict(model, newdata = new_data, interval = "prediction")
prediction_interval_40
boston_2010_40yr_women = boston %>%
filter(Year == 2010, Sex == "female", Age == 40)
model_women = lm(Time ~ 1, data = boston_2010_40yr_women)
conf_int_40yr_women = confint(model_women, level = 0.95)
conf_int_40yr_women
boston_2010_40yr_women = boston %>%
filter(Year == 2010, Sex == "female", Age == 40)
model_women = lm(Time ~ 1, data = boston_2010_40yr_women)
conf_int_40yr_women = confint(model_women, level = 0.95)
conf_int_40yr_women
boston_2010_women = boston %>%
filter(Year == 2010, Sex == "female", Age == 40)
model_women = lm(Time ~ 1, data = boston_2010_women)
conf_int_40yr_women = confint(model_women, level = 0.95)
conf_int_40yr_women
boston_2010_women = boston %>%
filter(Year == 2010, Sex == "female", Age == 40)
model_women = lm(Time ~ 1, data = boston_2010_women)
conf_int_women = confint(model_women, level = 0.95)
conf_int_women
boston_2011_women = boston %>%
filter(Year == 2011, Sex == "female", Age == 40)
mean_2011_women <- mean(boston_2011_women$Time)
mean_2011_women
boston_women <- boston %>%
filter(Year == 2011, Sex == "female")
age_model_women <- lm(Time ~ Age, data = boston_women)
predict_data <- data.frame(Age = 40)
predicted_time <- predict(age_model_women, newdata = predict_data, interval = "confidence")
predicted_time
lengths = seq(min(data$Length), max(data$Length), length.out = 100)
new_data = data.frame(Length = lengths)
intervals = predict(model_object3, newdata = new_data, interval = "prediction")
conf_intervals = predict(model_object3, newdata = new_data, interval = "confidence")
interval_data = data.frame(
Length = lengths,
Mean_Age = (conf_intervals[, "lwr"] + conf_intervals[, "upr"]) / 2,
SD_Age = (conf_intervals[, "upr"] - conf_intervals[, "lwr"]) / 2
)
ggplot(interval_data, aes(x = Length, y = Mean_Age)) +
geom_point(data = data, aes(x = Length, y = Age)) + # Original data points
geom_line(size = 1.5, color = "navy") + # Mean regression line
geom_line(aes(y = Mean_Age + SD_Age), linetype = "dashed", color = "pink") +
geom_line(aes(y = Mean_Age - SD_Age), linetype = "dashed", color = "pink") +
geom_ribbon(aes(ymin = Mean_Age - SD_Age,
ymax = Mean_Age + SD_Age),
alpha = 0.2) +
geom_line(aes(y = conf_intervals[, "lwr"]), color = "black", linetype = "solid") +
geom_line(aes(y = conf_intervals[, "upr"]), color = "black", linetype = "solid") +
labs(title = "Dugong Length vs. Age",
x = "Length (meters)",
y = "Age (years)",
color = "Parameter") +
theme_bw()
lengths = seq(min(data$Length), max(data$Length), length.out = 100)
new_data = data.frame(Length = lengths)
intervals = predict(model_object3, newdata = new_data, interval = "prediction")
conf_intervals = predict(model_object3, newdata = new_data, interval = "confidence")
interval_data = data.frame(
Length = lengths,
Mean_Age = (conf_intervals[, "lwr"] + conf_intervals[, "upr"]) / 2,
SD_Age = (conf_intervals[, "upr"] - conf_intervals[, "lwr"]) / 2
)
ggplot(interval_data, aes(x = Length, y = Mean_Age)) +
geom_point(data = data, aes(x = Length, y = Age)) + # Original data points
geom_line(size = 1.5, color = "navy") + # Mean regression line
geom_line(aes(y = Mean_Age + SD_Age), linetype = "dashed", color = "pink") +
geom_line(aes(y = Mean_Age - SD_Age), linetype = "dashed", color = "pink") +
geom_ribbon(aes(ymin = Mean_Age - SD_Age,
ymax = Mean_Age + SD_Age),
alpha = 0.2) +
labs(title = "Dugong Length vs. Age",
x = "Length (meters)",
y = "Age (years)",
color = "Parameter") +
theme_bw()
lengths = seq(min(data$Length), max(data$Length), length.out = 100)
new_data = data.frame(Length = lengths)
intervals = predict(model_object3, newdata = new_data, interval = "prediction")
conf_intervals = predict(model_object3, newdata = new_data, interval = "confidence")
interval_data = data.frame(
Length = lengths,
Mean_Age = (conf_intervals[, "lwr"] + conf_intervals[, "upr"]) / 2,
SD_Age = (conf_intervals[, "upr"] - conf_intervals[, "lwr"]) / 2
)
ggplot(interval_data, aes(x = Length, y = Mean_Age)) +
geom_point(data = data, aes(x = Length, y = Age)) + # Original data points
geom_line(size = 1.5, color = "navy") + # Mean regression line
geom_line(aes(y = Mean_Age + SD_Age), linetype = "dashed", color = "pink") +
geom_line(aes(y = Mean_Age - SD_Age), linetype = "dashed", color = "pink") +
geom_ribbon(aes(ymin = Mean_Age - SD_Age,
ymax = Mean_Age + SD_Age),
alpha = 0.2) +
geom_line(aes(y = conf_intervals[, "lwr"]), color = "black", linetype = "solid") +
geom_line(aes(y = conf_intervals[, "upr"]), color = "black", linetype = "solid") +
labs(title = "Dugong Length vs. Age",
x = "Length (meters)",
y = "Age (years)",
color = "Parameter") +
theme_bw()
lengths = seq(min(data$Length), max(data$Length), length.out = 100)
new_data = data.frame(Length = lengths)
intervals = predict(model_object3, newdata = new_data, interval = "prediction")
conf_intervals = predict(model_object3, newdata = new_data, interval = "confidence")
interval_data = data.frame(
Length = lengths,
Mean_Age = (conf_intervals[, "lwr"] + conf_intervals[, "upr"]) / 2,
SD_Age = (conf_intervals[, "upr"] - conf_intervals[, "lwr"]) / 2
)
ggplot(interval_data, aes(x = Length, y = Mean_Age)) +
geom_point(data = data, aes(x = Length, y = Age)) + # Original data points
geom_line(size = 1.5, color = "navy") + # Mean regression line
geom_line(aes(y = Mean_Age + SD_Age), linetype = "dashed", color = "pink") +
geom_line(aes(y = Mean_Age - SD_Age), linetype = "dashed", color = "pink") +
geom_ribbon(aes(ymin = Mean_Age - SD_Age,
ymax = Mean_Age + SD_Age),
alpha = 0.2) +
geom_hline(yintercept = conf_intervals[1, "lwr"], color = "black", linetype = "solid") +
geom_hline(yintercept = conf_intervals[1, "upr"], color = "black", linetype = "solid") +
labs(title = "Dugong Length vs. Age",
x = "Length (meters)",
y = "Age (years)",
color = "Parameter") +
theme_bw()
lengths = seq(min(data$Length), max(data$Length), length.out = 100)
new_data = data.frame(Length = lengths)
intervals = predict(model_object3, newdata = new_data, interval = "prediction")
conf_intervals = predict(model_object3, newdata = new_data, interval = "confidence")
interval_data = data.frame(
Length = lengths,
Mean_Age = (conf_intervals[, "lwr"] + conf_intervals[, "upr"]) / 2,
SD_Age = (conf_intervals[, "upr"] - conf_intervals[, "lwr"]) / 2
)
ggplot(interval_data, aes(x = Length, y = Mean_Age)) +
geom_point(data = data, aes(x = Length, y = Age)) + # Original data points
geom_line(size = 1.5, color = "navy") + # Mean regression line
geom_line(aes(y = Mean_Age + SD_Age), linetype = "dashed", color = "pink") +
geom_line(aes(y = Mean_Age - SD_Age), linetype = "dashed", color = "pink") +
geom_ribbon(aes(ymin = Mean_Age - SD_Age,
ymax = Mean_Age + SD_Age),
alpha = 0.2) +
geom_line(aes(y = conf_intervals[, "lwr"]), color = "black", linetype = "solid") +
geom_line(aes(y = conf_intervals[, "upr"]), color = "black", linetype = "solid") +
labs(title = "Dugong Length vs. Age",
x = "Length (meters)",
y = "Age (years)",
color = "Parameter") +
theme_bw()
lengths = seq(min(data$Length), max(data$Length), length.out = 100)
new_data = data.frame(Length = lengths)
intervals = predict(model_object3, newdata = new_data, interval = "prediction")
conf_intervals = predict(model_object3, newdata = new_data, interval = "confidence")
interval_data = data.frame(
Length = lengths,
Mean_Age = (conf_intervals[, "lwr"] + conf_intervals[, "upr"]) / 2,
SD_Age = (conf_intervals[, "upr"] - conf_intervals[, "lwr"]) / 2
)
ggplot(interval_data, aes(x = Length, y = Mean_Age)) +
geom_point(data = data, aes(x = Length, y = Age)) + # Original data points
geom_line(size = 1.5, color = "navy") + # Mean regression line
geom_line(aes(y = Mean_Age + SD_Age), linetype = "dashed", color = "pink") +
geom_line(aes(y = Mean_Age - SD_Age), linetype = "dashed", color = "pink") +
geom_ribbon(aes(ymin = Mean_Age - SD_Age,
ymax = Mean_Age + SD_Age),
alpha = 0.2) +
labs(title = "Dugong Length vs. Age",
x = "Length (meters)",
y = "Age (years)",
color = "Parameter") +
theme_bw()
